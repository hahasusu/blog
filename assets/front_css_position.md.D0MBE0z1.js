import{_ as a,c as s,o as e,a4 as t}from"./chunks/framework.GYzjcnJh.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"front/css/position.md","filePath":"front/css/position.md"}'),o={name:"front/css/position.md"},n=t(`<h2 id="static" tabindex="-1">static <a class="header-anchor" href="#static" aria-label="Permalink to &quot;static&quot;">​</a></h2><h2 id="relative" tabindex="-1">relative <a class="header-anchor" href="#relative" aria-label="Permalink to &quot;relative&quot;">​</a></h2><blockquote><p>相对定位元素的定位是相对其正常（原来)位置</p></blockquote><h2 id="absolute" tabindex="-1">absolute <a class="header-anchor" href="#absolute" aria-label="Permalink to &quot;absolute&quot;">​</a></h2><blockquote><p>绝对定位的元素的位置相对于最近的已定位父元素，如果元素没有已定位的父元素，那么它的位置相对于<code>&lt;html&gt;</code></p></blockquote><h2 id="fixed" tabindex="-1">fixed <a class="header-anchor" href="#fixed" aria-label="Permalink to &quot;fixed&quot;">​</a></h2><blockquote><p>元素的位置相对于浏览器窗口是固定位置。 即使窗口是滚动的它也不会移动</p></blockquote><h2 id="sticky" tabindex="-1">sticky <a class="header-anchor" href="#sticky" aria-label="Permalink to &quot;sticky&quot;">​</a></h2><blockquote><p>基于用户的滚动位置来定位</p></blockquote><h2 id="浮动" tabindex="-1">浮动 <a class="header-anchor" href="#浮动" aria-label="Permalink to &quot;浮动&quot;">​</a></h2><blockquote><p>浮动元素经常搭配标准流的父元素</p></blockquote><h2 id="清除浮动" tabindex="-1">清除浮动 <a class="header-anchor" href="#清除浮动" aria-label="Permalink to &quot;清除浮动&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>由于父级盒子在很多情况下，不方便给高度，但是子盒子浮动后脱离标准流，不占有位置， 最后父盒子的高度为0, 就会影响后面的元素</p></div><p><strong>1.添加额外标签</strong></p><p>在最后一个浮动元素后添加:</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#90A4AE;">&lt;</span><span style="color:#E2931D;">div</span><span style="color:#90A4AE;"> style=&quot;clear: both;&quot;</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;">&lt;/</span><span style="color:#E2931D;">div</span><span style="color:#39ADB5;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>2.父级元素添加<code>overflow</code></strong></p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#90A4AE;">&lt;</span><span style="color:#E2931D;">style</span><span style="color:#39ADB5;">&gt;</span></span>
<span class="line"><span style="color:#39ADB5;">    .</span><span style="color:#E2931D;">father</span><span style="color:#39ADB5;"> {</span></span>
<span class="line"><span style="color:#8796B0;">        overflow</span><span style="color:#39ADB5;">:</span><span style="color:#90A4AE;"> hidden</span><span style="color:#39ADB5;">;</span></span>
<span class="line"><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">&lt;/</span><span style="color:#E2931D;">style</span><span style="color:#39ADB5;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,18),l=[n];function r(c,p,i,d,u,b){return e(),s("div",null,l)}const y=a(o,[["render",r]]);export{m as __pageData,y as default};

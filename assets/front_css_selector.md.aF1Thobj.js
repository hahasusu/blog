import{_ as a,c as s,o as e,a4 as o}from"./chunks/framework.GYzjcnJh.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"front/css/selector.md","filePath":"front/css/selector.md"}'),n={name:"front/css/selector.md"},l=o(`<blockquote><p>选择器用来指定网页上我们想要样式化的HTML元素</p></blockquote><h2 id="_1-类型选择器" tabindex="-1">1.类型选择器 <a class="header-anchor" href="#_1-类型选择器" aria-label="Permalink to &quot;1.类型选择器&quot;">​</a></h2><p>类型选择器有时也叫做标签名选择器或者是元素选择器</p><h2 id="_2-全局选择器" tabindex="-1">2.全局选择器 <a class="header-anchor" href="#_2-全局选择器" aria-label="Permalink to &quot;2.全局选择器&quot;">​</a></h2><p>全局选择器，是由一个星号（*）代指的，它选中了文档中的所有内容</p><h2 id="_3-类选择器" tabindex="-1">3.类选择器 <a class="header-anchor" href="#_3-类选择器" aria-label="Permalink to &quot;3.类选择器&quot;">​</a></h2><h2 id="_4-id选择器" tabindex="-1">4.ID选择器 <a class="header-anchor" href="#_4-id选择器" aria-label="Permalink to &quot;4.ID选择器&quot;">​</a></h2><p>ID 选择器开头为<code>#</code>，基本上和类选择器是同种用法</p><h2 id="_5-伪类和伪元素" tabindex="-1">5.伪类和伪元素 <a class="header-anchor" href="#_5-伪类和伪元素" aria-label="Permalink to &quot;5.伪类和伪元素&quot;">​</a></h2><blockquote><p>伪类是选择器的一种，它用于选择处于特定状态的元素，比如当它们是这一类型的第一个元素时，或者是当鼠标指针悬浮在元素上面的时候</p></blockquote><h2 id="后代选择器" tabindex="-1">后代选择器 <a class="header-anchor" href="#后代选择器" aria-label="Permalink to &quot;后代选择器&quot;">​</a></h2><blockquote><p>用单个空格（&quot; &quot;）字符——组合两个选择器</p></blockquote><p>只会匹配处于带有<code>.box</code>类的元素里面的<code>p</code>元素</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">.</span><span style="color:#E2931D;">box</span><span style="color:#E2931D;"> p</span><span style="color:#39ADB5;"> {</span></span>
<span class="line"><span style="color:#8796B0;">  color</span><span style="color:#39ADB5;">:</span><span style="color:#90A4AE;"> red</span><span style="color:#39ADB5;">;</span></span>
<span class="line"><span style="color:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="子代关系选择器" tabindex="-1">子代关系选择器 <a class="header-anchor" href="#子代关系选择器" aria-label="Permalink to &quot;子代关系选择器&quot;">​</a></h2><blockquote><p>子代关系选择器是个大于号<code>&gt;</code></p></blockquote><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">article</span><span style="color:#39ADB5;"> &gt;</span><span style="color:#E2931D;"> p</span></span>
<span class="line"><span style="color:#90A4AE;">只选中作为&lt;</span><span style="color:#E2931D;">article</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;">的直接子元素的&lt;</span><span style="color:#E2931D;">p</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;">元素</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,17),t=[l];function r(c,p,i,d,h,u){return e(),s("div",null,t)}const m=a(n,[["render",r]]);export{_ as __pageData,m as default};

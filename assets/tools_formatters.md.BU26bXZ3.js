import{_ as s,c as n,o as a,a4 as l}from"./chunks/framework.GYzjcnJh.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"tools/formatters.md","filePath":"tools/formatters.md"}'),e={name:"tools/formatters.md"},p=l(`<h2 id="ruff" tabindex="-1">Ruff <a class="header-anchor" href="#ruff" aria-label="Permalink to &quot;Ruff&quot;">​</a></h2><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">pip</span><span style="color:#91B859;"> install</span><span style="color:#91B859;"> ruff</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># On macOS and Linux.</span></span>
<span class="line"><span style="color:#E2931D;">curl</span><span style="color:#91B859;"> -LsSf</span><span style="color:#91B859;"> https://astral.sh/ruff/install.sh</span><span style="color:#39ADB5;"> |</span><span style="color:#E2931D;"> sh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>ruff check   # Lint all files in the current directory.</span></span>
<span class="line"><span>ruff format  # Format all files in the current directory.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="配置文件" tabindex="-1">配置文件 <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件&quot;">​</a></h3><p>Ruff 在文件目录或任何父目录中查找第一个 <code>pyproject.toml</code>、 <code>ruff.toml</code> 或 <code>.ruff.toml</code> 文件</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">[</span><span style="color:#90A4AE;">format</span><span style="color:#39ADB5;">]</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># Like Black, use double quotes for strings.</span></span>
<span class="line"><span style="color:#E2931D;">quote-style</span><span style="color:#91B859;"> =</span><span style="color:#39ADB5;"> &quot;</span><span style="color:#91B859;">double</span><span style="color:#39ADB5;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># Like Black, indent with spaces, rather than tabs.</span></span>
<span class="line"><span style="color:#E2931D;">indent-style</span><span style="color:#91B859;"> =</span><span style="color:#39ADB5;"> &quot;</span><span style="color:#91B859;">space</span><span style="color:#39ADB5;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># Like Black, respect magic trailing commas.</span></span>
<span class="line"><span style="color:#E2931D;">skip-magic-trailing-comma</span><span style="color:#91B859;"> =</span><span style="color:#39ADB5;"> false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># Like Black, automatically detect the appropriate line ending.</span></span>
<span class="line"><span style="color:#E2931D;">line-ending</span><span style="color:#91B859;"> =</span><span style="color:#39ADB5;"> &quot;</span><span style="color:#91B859;">auto</span><span style="color:#39ADB5;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># Enable auto-formatting of code examples in docstrings. Markdown,</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># reStructuredText code/literal blocks and doctests are all supported.</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;">#</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># This is currently disabled by default, but it is planned for this</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># to be opt-out in the future.</span></span>
<span class="line"><span style="color:#E2931D;">docstring-code-format</span><span style="color:#91B859;"> =</span><span style="color:#39ADB5;"> false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># Set the line length limit used when formatting code snippets in</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># docstrings.</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;">#</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># This only has an effect when the \`docstring-code-format\` setting is</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># enabled.</span></span>
<span class="line"><span style="color:#E2931D;">docstring-code-line-length</span><span style="color:#91B859;"> =</span><span style="color:#39ADB5;"> &quot;</span><span style="color:#91B859;">dynamic</span><span style="color:#39ADB5;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div>`,7),t=[p];function o(r,c,i,u,b,d){return a(),n("div",null,t)}const f=s(e,[["render",o]]);export{y as __pageData,f as default};

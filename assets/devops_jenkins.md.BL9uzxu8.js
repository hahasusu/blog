import{_ as s,c as n,o as a,a4 as e}from"./chunks/framework.GYzjcnJh.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"devops/jenkins.md","filePath":"devops/jenkins.md"}'),l={name:"devops/jenkins.md"},p=e(`<h2 id="docker-安装" tabindex="-1">docker 安装 <a class="header-anchor" href="#docker-安装" aria-label="Permalink to &quot;docker 安装&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">mkdir</span><span style="color:#91B859;"> -p</span><span style="color:#91B859;"> /srv/jenkins</span></span>
<span class="line"><span style="color:#E2931D;">chown</span><span style="color:#91B859;"> -R</span><span style="color:#91B859;"> 1000:1000</span><span style="color:#91B859;"> /srv/jenkins</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> run</span><span style="color:#91B859;"> -d</span><span style="color:#91B859;"> --name</span><span style="color:#91B859;"> jenkins</span><span style="color:#91B859;"> -p</span><span style="color:#91B859;"> 8080:8080</span><span style="color:#91B859;"> -p</span><span style="color:#91B859;"> 50000:50000</span><span style="color:#90A4AE;"> \\</span></span>
<span class="line"><span style="color:#91B859;">  -v</span><span style="color:#91B859;"> /srv/jenkins:/var/jenkins_home</span><span style="color:#90A4AE;"> \\</span></span>
<span class="line"><span style="color:#91B859;">  -v</span><span style="color:#91B859;"> /var/run/docker.sock:/var/run/docker.sock</span><span style="color:#90A4AE;"> \\</span></span>
<span class="line"><span style="color:#91B859;">  -v</span><span style="color:#91B859;"> /usr/bin/docker:/usr/bin/docker</span><span style="color:#90A4AE;"> \\</span></span>
<span class="line"><span style="color:#91B859;">  -v</span><span style="color:#91B859;"> /etc/docker/daemon.json:/etc/docker/daemon.json</span><span style="color:#90A4AE;"> \\</span></span>
<span class="line"><span style="color:#91B859;">  jenkins/jenkins:2.454-jdk11</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;">#jenkins/jenkins:lts-jdk11</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="仓库安装" tabindex="-1">仓库安装 <a class="header-anchor" href="#仓库安装" aria-label="Permalink to &quot;仓库安装&quot;">​</a></h2><p>USTC各个版本: <a href="https://mirrors.ustc.edu.cn/jenkins/redhat/" target="_blank" rel="noreferrer">https://mirrors.ustc.edu.cn/jenkins/redhat/</a></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">dnf</span><span style="color:#91B859;"> install</span><span style="color:#91B859;"> -y</span><span style="color:#91B859;"> java-11-openjdk</span></span>
<span class="line"><span style="color:#E2931D;">wget</span><span style="color:#91B859;"> https://mirrors.ustc.edu.cn/jenkins/redhat/jenkins-2.455-1.1.noarch.rpm</span></span>
<span class="line"><span style="color:#E2931D;">rpm</span><span style="color:#91B859;"> -i</span><span style="color:#91B859;"> jenkins-2.455-1.1.noarch.rpm</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="修改插件地址" tabindex="-1">修改插件地址 <a class="header-anchor" href="#修改插件地址" aria-label="Permalink to &quot;修改插件地址&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#90A4AE;font-style:italic;">#cd /srv/jenkins</span></span>
<span class="line"><span style="color:#6182B8;">cd</span><span style="color:#91B859;"> /var/lib/jenkins/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">sed</span><span style="color:#91B859;"> -i.bak</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">s#updates.jenkins.io#mirrors.tuna.tsinghua.edu.cn/jenkins/updates#</span><span style="color:#39ADB5;">&#39;</span><span style="color:#91B859;"> hudson.model.UpdateCenter.xml</span></span>
<span class="line"><span style="color:#E2931D;">sed</span><span style="color:#91B859;"> -i.bak</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">s#updates.jenkins.io/download#mirrors.tuna.tsinghua.edu.cn/jenkins#g</span><span style="color:#39ADB5;">&#39;</span><span style="color:#91B859;"> updates/default.json</span></span>
<span class="line"><span style="color:#E2931D;">sed</span><span style="color:#91B859;"> -i</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">s#www.google.com#www.baidu.com#gi</span><span style="color:#39ADB5;">&#39;</span><span style="color:#91B859;"> updates/default.json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> restart</span><span style="color:#39ADB5;"> &lt;</span><span style="color:#91B859;">i</span><span style="color:#90A4AE;">d</span><span style="color:#39ADB5;">&gt;</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># systemctl restart jenkins</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="一些插件" tabindex="-1">一些插件 <a class="header-anchor" href="#一些插件" aria-label="Permalink to &quot;一些插件&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">chinese</span></span>
<span class="line"><span style="color:#E2931D;">git</span></span>
<span class="line"><span style="color:#E2931D;">pipeline</span></span>
<span class="line"><span style="color:#E2931D;">maven</span></span>
<span class="line"><span style="color:#E2931D;">blue</span><span style="color:#91B859;"> ocean</span></span>
<span class="line"><span style="color:#E2931D;">over</span><span style="color:#91B859;"> ssh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="自由风格部署" tabindex="-1">自由风格部署 <a class="header-anchor" href="#自由风格部署" aria-label="Permalink to &quot;自由风格部署&quot;">​</a></h2><p><strong>构建后操作</strong></p><ol><li>deploy war to container(需安装deploy插件)</li><li>ssh命令</li><li>Ansible</li></ol><h2 id="添加自定义的maven配置文件" tabindex="-1">添加自定义的maven配置文件 <a class="header-anchor" href="#添加自定义的maven配置文件" aria-label="Permalink to &quot;添加自定义的maven配置文件&quot;">​</a></h2><ol><li>安装插件 <code>Config File Provider</code></li><li>系统管理 - 管理文件 - 新建 - maven setting.xml</li><li>任务 - 构建环境（<code>Provide Configuration files</code>)</li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">    &lt;</span><span style="color:#E2931D;">mirror</span><span style="color:#90A4AE;">&gt;</span></span>
<span class="line"><span style="color:#39ADB5;">        &lt;</span><span style="color:#E2931D;">id</span><span style="color:#90A4AE;">&gt;</span><span style="color:#91B859;">aliyunmaven</span><span style="color:#90A4AE;">&lt;/id&gt;</span></span>
<span class="line"><span style="color:#39ADB5;">        &lt;</span><span style="color:#E2931D;">mirrorOf</span><span style="color:#90A4AE;">&gt;</span><span style="color:#91B859;">*</span><span style="color:#90A4AE;">&lt;/mirrorOf&gt;</span></span>
<span class="line"><span style="color:#39ADB5;">        &lt;</span><span style="color:#E2931D;">name</span><span style="color:#90A4AE;">&gt;</span><span style="color:#91B859;">阿里云公共仓库</span><span style="color:#90A4AE;">&lt;/name&gt;</span></span>
<span class="line"><span style="color:#39ADB5;">        &lt;</span><span style="color:#E2931D;">url</span><span style="color:#90A4AE;">&gt;</span><span style="color:#91B859;">https://maven.aliyun.com/repository/public</span><span style="color:#90A4AE;">&lt;/url&gt;</span></span>
<span class="line"><span style="color:#39ADB5;">    &lt;</span><span style="color:#E2931D;">/mirror</span><span style="color:#90A4AE;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="jenkins的分布式构建" tabindex="-1">Jenkins的分布式构建 <a class="header-anchor" href="#jenkins的分布式构建" aria-label="Permalink to &quot;Jenkins的分布式构建&quot;">​</a></h2><p>两种角色：</p><ul><li>Controller/Master：控制节点，控制平面</li><li>Agent/Slave：工作节点，数据平面</li></ul><p><strong>静态Agent</strong>： 以daemon形式运行的Jenkins；每个Agent可以存在多个Executor，具体的数量应该根据Agent所在主机的系统资源来设定 (1) Linux Jenkins<br> (2) Windows Jenkins<br> (3) Jenkins Container</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>注意：很多的构建步骤，有可能会通过运行shell命令进行，于是此时要确保在Container内部有可用的命令；</p></div><p><strong>动态Agent</strong>：由Controller按Job的运行需要临时创建，且Job运行结束后会删除；可以把每个Agent视作一个动态的Executor；</p><p>依赖的环境：云，支持由Jenkins Controller通过API调用</p><ul><li>(1) Docker Plugin 基于配置的Docker Host，按需要创建容器运行Agent，需要事先配置好容器模板</li><li>( 2) Kubernetes Plugin 基于配置的Kubernets，按需要创建Pod运行Agent，需要事先配置Pod模板</li></ul><blockquote><p>Controller自身既可以部署在k8s上，也完全可以运行在k8s外；</p></blockquote><h3 id="jenkins与agent之间的通信" tabindex="-1"><strong>Jenkins与Agent之间的通信</strong> <a class="header-anchor" href="#jenkins与agent之间的通信" aria-label="Permalink to &quot;**Jenkins与Agent之间的通信**&quot;">​</a></h3><p><code>SSH连接</code>：</p><pre><code>        Agent端是SSH Server端 
        认证方式：应该在Controller端保存认证信息为Credential
            口令认证
            密钥认证
        运行者身份：普通用户jenkins
            /home/jenkins/agent目录，作为Agent端的工作目录

        Controller ssh client --&gt; Agent ssh server 
</code></pre><p><code>JNLP连接</code>： JNLP-HTTP连接器</p><p>在agent上以手动或系统服务的方式经由JNLP协议触发双向连接的建立</p><p>要求：Controller端额外提供一个套接以接入连接请求<br> 默认使用tcp协议的<code>50000</code>端口<br> 也支持使用随机端口：安全，问题是会对服务端在防火墙开放该端口造成困扰；</p><pre><code>也可以使用websocket，基于默认8080端口建立集群通信连接  
</code></pre><p>Controller jnlp server &lt;-- Agent jnlp client</p><p>在Controller上远程运行命令启动Agent(Launch agent via execution of command on the controller)</p>`,33),o=[p];function r(t,c,i,d,b,u){return a(),n("div",null,o)}const h=s(l,[["render",r]]);export{m as __pageData,h as default};

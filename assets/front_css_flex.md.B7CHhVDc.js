import{_ as e,c as s,o as t,a4 as a}from"./chunks/framework.GYzjcnJh.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"front/css/flex.md","filePath":"front/css/flex.md"}'),n={name:"front/css/flex.md"},l=a(`<blockquote><p>Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性</p></blockquote><p>任何一个容器都可以指定为 Flex 布局</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">.</span><span style="color:#E2931D;">box</span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#8796B0;">  display</span><span style="color:#39ADB5;">:</span><span style="color:#90A4AE;"> flex</span><span style="color:#39ADB5;">;</span></span>
<span class="line"><span style="color:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>行内元素也可以使用 Flex 布局。</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">.</span><span style="color:#E2931D;">box</span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#8796B0;">  display</span><span style="color:#39ADB5;">:</span><span style="color:#90A4AE;"> inline-flex</span><span style="color:#39ADB5;">;</span></span>
<span class="line"><span style="color:#39ADB5;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>注意，设为 Flex 布局以后，子元素的<code>float</code>、<code>clear</code>和<code>vertical-align</code>属性将失效。</p><h2 id="基本概念" tabindex="-1">基本概念 <a class="header-anchor" href="#基本概念" aria-label="Permalink to &quot;基本概念&quot;">​</a></h2><p>采用 Flex 布局的元素，称为 Flex 容器（flex container），简称&quot;容器&quot;。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称&quot;项目&quot;。</p><h2 id="容器的属性" tabindex="-1">容器的属性 <a class="header-anchor" href="#容器的属性" aria-label="Permalink to &quot;容器的属性&quot;">​</a></h2><p>以下6个属性设置在容器上</p><table tabindex="0"><thead><tr><th>属性</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td>flex-direction</td><td>row , row-reverse , column , column-reverse</td><td>决定主轴的方向</td></tr><tr><td>flex-wrap</td><td>nowrap , wrap , wrap-reverse</td><td>如果一条轴线排不下，如何换行</td></tr><tr><td>flex-flow</td><td></td><td></td></tr><tr><td>justify-content</td><td>flex-start , flex-end , center , space-between , space-around</td><td>项目在主轴上的对齐方式</td></tr><tr><td>align-items</td><td>flex-start , flex-end , center , baseline , stretch</td><td>项目在侧轴上如何对齐</td></tr><tr><td>align-content</td><td></td><td></td></tr></tbody></table>`,11),o=[l];function r(p,c,d,i,u,b){return t(),s("div",null,o)}const f=e(n,[["render",r]]);export{h as __pageData,f as default};

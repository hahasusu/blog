import{_ as s,c as a,o as n,a4 as e}from"./chunks/framework.GYzjcnJh.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{"date":"2024-02-25 08:03:12"},"headers":[],"relativePath":"devops/zabbix/intro.md","filePath":"devops/zabbix/intro.md"}'),l={name:"devops/zabbix/intro.md"},p=e(`<h2 id="zabbix主动模式和被动模式" tabindex="-1">zabbix主动模式和被动模式 <a class="header-anchor" href="#zabbix主动模式和被动模式" aria-label="Permalink to &quot;zabbix主动模式和被动模式&quot;">​</a></h2><p><strong>主动模式：</strong><br> 主动是对于agent来说，主动向server发送监控数据</p><p><strong>被动模式：</strong><br> 等待server来拉取监控数据,agent需要监听端口，默认10050</p><h3 id="修改为主动模式" tabindex="-1">修改为主动模式 <a class="header-anchor" href="#修改为主动模式" aria-label="Permalink to &quot;修改为主动模式&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#90A4AE;font-style:italic;"># agent2客户端修改配置文件/etc/zabbix/zabbix_agent2.conf</span></span>
<span class="line"><span style="color:#90A4AE;">ServerActive</span><span style="color:#39ADB5;">=</span><span style="color:#91B859;">server</span><span style="color:#E2931D;"> ip</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># web界面批量修改监控项为 主动式</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">注意主动模式时,配置文件的Hostname要与web界面的主机名称一致。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="故障自愈" tabindex="-1">故障自愈 <a class="header-anchor" href="#故障自愈" aria-label="Permalink to &quot;故障自愈&quot;">​</a></h2><p>在zabbix-proxy 和 zabbix-agent2上远程命令默认关闭</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#90A4AE;font-style:italic;"># 开启远程命令</span></span>
<span class="line"><span style="color:#E2931D;">vim</span><span style="color:#91B859;"> /etc/zabbix/zabbix_agent2.conf</span></span>
<span class="line"><span style="color:#90A4AE;">AllowKey</span><span style="color:#39ADB5;">=</span><span style="color:#91B859;">system.run[*</span><span style="color:#90A4AE;">]</span></span>
<span class="line"><span style="color:#90A4AE;">AllowRoot</span><span style="color:#39ADB5;">=</span><span style="color:#91B859;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;">UnsafeUserParameter</span><span style="color:#39ADB5;">=</span><span style="color:#91B859;">1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,8),r=[p];function t(o,i,c,b,d,m){return n(),a("div",null,r)}const y=s(l,[["render",t]]);export{h as __pageData,y as default};

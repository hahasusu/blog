import{_ as s,c as n,o as a,a4 as l}from"./chunks/framework.GYzjcnJh.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{"date":"2023-11-03 19:00:19"},"headers":[],"relativePath":"linux/ssh.md","filePath":"linux/ssh.md"}'),e={name:"linux/ssh.md"},p=l(`<p>在Linux系统中，OpenSSH是目前最流行的远程系统登录与文件传输应用，也是传统Telenet、FTP和R系列等网络应用的换代产品。其中，ssh（Secure Shell）可以替代telnet、rlogin和rsh，scp（Secure Copy）与sftp（Secure FTP）能后替代ftp。</p><p>OpenSSH采用密钥的方式对数据进行加密，确保数据传输的安全。在正式开始传输数据之前，双方首先要交换密钥，当收到对方的数据时，再利用密钥和相应的程序对数据进行解密。这种加密的数据传输有助于防止非法用户获取数据信息。</p><p>OpenSSH采用随机的方式生成公私密钥。密钥通常只需生成一次，必要时也可以重新制作。</p><p>当使用ssh命令登录到远程系统时，OpenSSH服务器的sshd守护进行将会发送一个公钥，OpenSSH客户端软件ssh将会提示用户确认是否接收发送的公钥。同时，OpenSSH客户端也会向服务器回传一个密钥，使OpenSSH连接双方的每个系统都拥有对方的密钥，因而能够解密对方经由加密链路发送的加密数据。</p><p>OpenSSH服务器的公钥与私玥均存储在/etc/ssh目录中。在OpenSSH客户端，用户收到的所有公钥，以及提供密钥的OpenSSH服务器的IP地址均存储在用户主目录下的~/.ssh/known_hosts文件中（.ssh是一个隐藏目录）。如果密钥与IP地址不再匹配，OpenSSH将会认为某个环节出了问题。例如，重新安装操作系统或者升级OpenSSH都会导致系统再次生成新的密钥，恶意的网络攻击也会造成密钥的变动。因此，当密钥发生变化时，总是应当先了解密钥发生变化的原因，以确保网络访问期间的数据安全。</p><h2 id="ssh-免密登录" tabindex="-1">SSH 免密登录 <a class="header-anchor" href="#ssh-免密登录" aria-label="Permalink to &quot;SSH 免密登录&quot;">​</a></h2><blockquote><p>SSH（Secure Shell）免密登录，也称为SSH密钥身份验证，是一种允许用户在不需要每次输入密码的情况下安全登录远程服务器的方法</p></blockquote><p><strong>登录原理</strong></p><ol><li><p>生成密钥对：首先，用户在本地计算机上生成一个密钥对，该密钥对包括两部分：公钥和私钥。公钥是公开的，可以被发送到远程服务器，而私钥必须保持私密，只存储在本地计算机。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">ssh-keygen</span><span style="color:#91B859;"> -t</span><span style="color:#91B859;"> rsa</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>将公钥发送到远程服务器：用户将生成的公钥（通常是~/.ssh/id_rsa.pub文件中的内容）复制并添加到远程服务器的~/.ssh/authorized_keys文件中。这可以通过SSH登录、复制粘贴或其他方法来完成。此操作告诉远程服务器可以接受与公钥匹配的私钥来验证用户身份。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">mkdir</span><span style="color:#91B859;"> -p</span><span style="color:#91B859;"> ~/.ssh</span></span>
<span class="line"><span style="color:#E2931D;">cat</span><span style="color:#91B859;"> id_rsa.pub</span><span style="color:#39ADB5;"> &gt;&gt;</span><span style="color:#91B859;"> ~/.ssh/authorized_keys</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 或者</span></span>
<span class="line"><span style="color:#E2931D;">scp</span><span style="color:#91B859;"> ~/.ssh/id_rsa.pub</span><span style="color:#91B859;"> username@ip:~/.ssh/authorized_keys</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>SSH连接：当用户尝试通过SSH连接到远程服务器时，服务器将要求客户端提供密钥以进行身份验证。</p></li><li><p>密钥匹配：客户端将私钥与服务器上的公钥进行匹配。如果私钥与公钥匹配，服务器将验证用户的身份，然后允许用户登录，而无需输入密码。</p></li><li><p>登录成功：如果密钥匹配成功，用户将成功登录到远程服务器，而无需提供密码。</p></li></ol><p>SSH免密登录的优点包括更高的安全性，因为私钥通常受到更好的保护，同时也提供了方便，因为用户无需每次登录时输入密码。这对于自动化脚本和远程管理特别有用。</p><p>需要注意的是，保护私钥的安全性非常重要。私钥应该存储在本地计算机上，并且只有授权的用户可以访问它。泄露私钥可能导致未经授权的访问远程服务器。此外，建议设置适当的文件权限以确保~/.ssh/authorized_keys文件和相关目录仅对拥有者可写，以增加安全性。</p><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">~</span><span style="color:#90A4AE;">/.ssh/config</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 全局选项</span></span>
<span class="line"><span style="color:#E2931D;">User</span><span style="color:#91B859;"> 用户名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 特定于主机的选项</span></span>
<span class="line"><span style="color:#E2931D;">Host</span><span style="color:#91B859;"> myserver</span></span>
<span class="line"><span style="color:#E2931D;">    Hostname</span><span style="color:#91B859;"> 服务器地址</span></span>
<span class="line"><span style="color:#E2931D;">    Port</span><span style="color:#91B859;">     端口</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">这样配置之后，下面的命令是等价的：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">ssh</span><span style="color:#91B859;"> -p</span><span style="color:#91B859;"> 端口</span><span style="color:#91B859;"> 用户名@服务器地址</span></span>
<span class="line"><span style="color:#E2931D;">ssh</span><span style="color:#91B859;"> myserver</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="ssh安全加固和性能优化" tabindex="-1">ssh安全加固和性能优化 <a class="header-anchor" href="#ssh安全加固和性能优化" aria-label="Permalink to &quot;ssh安全加固和性能优化&quot;">​</a></h2><ul><li>使用非默认端口</li><li>限制可登录用户</li><li>设定空闲会话超时时长</li><li>使用基于密钥的认证</li><li>禁止root用户登录</li><li></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#90A4AE;font-style:italic;"># root登录</span></span>
<span class="line"><span style="color:#E2931D;">PermitRootLogin</span><span style="color:#91B859;"> no</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 隆降低连接延迟</span></span>
<span class="line"><span style="color:#E2931D;">ChallengeResponseAuthenticatin</span><span style="color:#91B859;"> no</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 避免反向解析</span></span>
<span class="line"><span style="color:#E2931D;">UseDNS</span><span style="color:#91B859;"> no</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 设置ssh空闲60s自动注销</span></span>
<span class="line"><span style="color:#E2931D;">vim</span><span style="color:#91B859;"> /etc/sshd_config</span></span>
<span class="line"><span style="color:#E2931D;">ClientAliveInterval</span><span style="color:#F76D47;"> 60</span></span>
<span class="line"><span style="color:#E2931D;">ClientAliveCountMax</span><span style="color:#F76D47;"> 0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="免密登录失败原因" tabindex="-1">免密登录失败原因 <a class="header-anchor" href="#免密登录失败原因" aria-label="Permalink to &quot;免密登录失败原因&quot;">​</a></h2><ol><li><p><strong>检查密钥文件权限</strong><br> 本地机器上的私钥文件（通常是~/.ssh/id_rsa）的权限应该设置为600</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">chmod</span><span style="color:#F76D47;"> 600</span><span style="color:#91B859;"> ~/.ssh/id_rsa</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p><strong>检查远程服务器上的密钥文件权限</strong><br> 远程服务器上的~/.ssh目录和authorized_keys文件应该具有适当的权限</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#E2931D;">chmod</span><span style="color:#F76D47;"> 700</span><span style="color:#91B859;"> ~/.ssh</span></span>
<span class="line"><span style="color:#E2931D;">chmod</span><span style="color:#F76D47;"> 600</span><span style="color:#91B859;"> ~/.ssh/authorized_keys</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p><strong>检查密钥文件格式</strong><br> 确保您的密钥文件的格式正确。私钥应该以-----BEGIN RSA PRIVATE KEY-----开头。</p><p>公钥应该以ssh-rsa开头，然后是一长串的密钥数据。</p></li><li><p><strong>检查公钥是否正确上传到服务器</strong></p></li><li><p><strong>查看SSH服务器配置</strong><br> 在远程服务器上检查SSH服务器的配置文件<code>/etc/ssh/sshd_config</code>。确保以下配置是启用的</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">PubkeyAuthentication</span><span style="color:#91B859;"> yes</span></span>
<span class="line"><span style="color:#E2931D;">AuthorizedKeysFile</span><span style="color:#91B859;"> .ssh/authorized_keys</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ol><h2 id="sudo-授权" tabindex="-1">sudo 授权 <a class="header-anchor" href="#sudo-授权" aria-label="Permalink to &quot;sudo 授权&quot;">​</a></h2><p><strong>配置文件</strong>: <code>/etc/sudoers</code></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#90A4AE;font-style:italic;">## Allow root to run any commands anywhere</span></span>
<span class="line"><span style="color:#E2931D;">root</span><span style="color:#91B859;">    ALL=</span><span style="color:#39ADB5;">(</span><span style="color:#E2931D;">ALL</span><span style="color:#39ADB5;">)</span><span style="color:#91B859;">       ALL</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;">## Allows people in group wheel to run all commands</span></span>
<span class="line"><span style="color:#E2931D;">%wheel</span><span style="color:#91B859;">  ALL=</span><span style="color:#39ADB5;">(</span><span style="color:#E2931D;">ALL</span><span style="color:#39ADB5;">)</span><span style="color:#91B859;">       ALL</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;">## Same thing without a password</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># %wheel        ALL=(ALL)       NOPASSWD: Allow</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;">## Read drop-in files from /etc/sudoers.d (the # here does not mean a comment)</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;">#includedir /etc/sudoers.d</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="ssh-端口转发" tabindex="-1">SSH 端口转发 <a class="header-anchor" href="#ssh-端口转发" aria-label="Permalink to &quot;SSH 端口转发&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>本地转发</strong>是通过本地计算机访问远程 SSH 服务器，<br><strong>远程转发</strong>则是通过远程 SSH 服务器访问本地计算机。</p><p>无论是本地端口转发还是远程端口转发，都需要在服务器上配置 <code>/etc/ssh/sshd_config</code>: GatewayPorts yes</p></div><h3 id="本地端口转发" tabindex="-1">本地端口转发 <a class="header-anchor" href="#本地端口转发" aria-label="Permalink to &quot;本地端口转发&quot;">​</a></h3><blockquote><p>将本地计算机的一个端口通过 SSH 隧道转发到远程主机的某个端口，通常用于访问远程服务器上的资源</p></blockquote><p>本地端口转发是在本地机器上打开一个端口，将本地的数据通过 SSH 隧道发送到远程服务器上，然后由远程服务器进一步将数据转发到目标主机</p><p>使用场景：</p><ul><li><strong>访问内部网络资源</strong>：如果你在外网环境，无法直接访问公司内网中的某些服务，可以通过本地端口转发，让本地访问这些内网服务。</li></ul><p>语法：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">ssh</span><span style="color:#90A4AE;"> [-f </span><span style="color:#91B859;">-N</span><span style="color:#90A4AE;">] -L </span><span style="color:#39ADB5;">[</span><span style="color:#90A4AE;">本地IP:</span><span style="color:#39ADB5;">]</span><span style="color:#90A4AE;">本地端口:远程主机:远程端口 </span><span style="color:#39ADB5;">[</span><span style="color:#90A4AE;">用户@SSH服务器</span><span style="color:#39ADB5;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">常见选项：</span></span>
<span class="line"><span style="color:#E2931D;">-N：不执行远程命令，仅建立隧道。</span></span>
<span class="line"><span style="color:#E2931D;">-f：在后台运行</span><span style="color:#91B859;"> SSH</span><span style="color:#91B859;"> 进程，常与</span><span style="color:#91B859;"> -N</span><span style="color:#91B859;"> 配合使用</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="远程端口转发" tabindex="-1">远程端口转发 <a class="header-anchor" href="#远程端口转发" aria-label="Permalink to &quot;远程端口转发&quot;">​</a></h3><p>远程端口转发是相反的方式，它在远程服务器上打开一个端口，将来自远程服务器的数据通过 SSH 隧道转发到本地机器上的某个端口。</p><p>使用场景：</p><ul><li><strong>让远程主机访问本地服务</strong>：例如，你的本地机器上运行着一个 Web 服务器或数据库，但它不能直接被外网访问。通过远程端口转发，你可以在远程服务器上开放一个端口，远程主机访问这个端口时，数据会被转发到你的本地机器。</li></ul><p>命令格式:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">ssh</span><span style="color:#90A4AE;"> [-p </span><span style="color:#91B859;">ssh端口]</span><span style="color:#91B859;"> -fNR</span><span style="color:#90A4AE;"> []:remote_prot:local:local_port remote_user@remote_host</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>实例：ssh登录内网服务器</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">内网主机:10.0.0.10</span></span>
<span class="line"><span style="color:#E2931D;">阿里云：8.77.137.xxx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 内网主机执行</span></span>
<span class="line"><span style="color:#E2931D;">ssh</span><span style="color:#91B859;"> -p</span><span style="color:#F76D47;"> 2222</span><span style="color:#91B859;"> -fNR</span><span style="color:#91B859;"> 5000:localhost:22</span><span style="color:#91B859;"> root@8.77.137.xx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">之后在任意主机都可以访问内网主机10.0.0.10</span></span>
<span class="line"><span style="color:#E2931D;">1.</span><span style="color:#91B859;"> ssh</span><span style="color:#91B859;"> -p</span><span style="color:#F76D47;"> 2222</span><span style="color:#91B859;"> root@8.77.137.xx</span></span>
<span class="line"><span style="color:#E2931D;">2.</span><span style="color:#91B859;"> ssh</span><span style="color:#91B859;"> -p</span><span style="color:#F76D47;"> 5000</span><span style="color:#91B859;"> root@localhost</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="动态端口转发" tabindex="-1">动态端口转发 <a class="header-anchor" href="#动态端口转发" aria-label="Permalink to &quot;动态端口转发&quot;">​</a></h3>`,39),o=[p];function r(t,c,i,b,d,u){return a(),n("div",null,o)}const m=s(e,[["render",r]]);export{y as __pageData,m as default};

import{_ as s,c as n,o as a,a4 as l}from"./chunks/framework.GYzjcnJh.js";const A=JSON.parse('{"title":"Sed","description":"","frontmatter":{},"headers":[],"relativePath":"linux/sed.md","filePath":"linux/sed.md"}'),p={name:"linux/sed.md"},e=l(`<h1 id="sed" tabindex="-1">Sed <a class="header-anchor" href="#sed" aria-label="Permalink to &quot;Sed&quot;">​</a></h1><h2 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;原理&quot;">​</a></h2><p><img src="http://pic.justdoiit.top/imgs/2024-03-01-1709282455.webp" alt="" loading="lazy"></p><div class="tip custom-block"><p class="custom-block-title">💡</p><p>功能强大的流式文本编辑器<br> 处理过程：把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。</p></div><p><strong>命令格式</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">sed</span><span style="color:#90A4AE;"> [options] </span><span style="color:#39ADB5;">&#39;</span><span style="color:#91B859;">command</span><span style="color:#39ADB5;">&#39;</span><span style="color:#90A4AE;"> file(</span><span style="color:#E2931D;">s</span><span style="color:#90A4AE;">)</span></span>
<span class="line"><span style="color:#E2931D;">sed</span><span style="color:#90A4AE;"> [options] -f scriptfile file(</span><span style="color:#E2931D;">s</span><span style="color:#90A4AE;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>选项</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">-e</span><span style="color:#90A4AE;">&lt;script&gt;或--expression=&lt;script&gt;：以选项中的指定的script来处理输入的文本文件；</span></span>
<span class="line"><span style="color:#E2931D;">-f</span><span style="color:#90A4AE;">&lt;script文件&gt;或--file=&lt;script文件&gt;：以选项中指定的script文件来处理输入的文本文件；</span></span>
<span class="line"><span style="color:#E2931D;">-h或--help：显示帮助；</span></span>
<span class="line"><span style="color:#E2931D;">-n或--quiet或——silent：仅显示script处理后的结果；</span></span>
<span class="line"><span style="color:#E2931D;">-V或--version：显示版本信息。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="命令" tabindex="-1">命令 <a class="header-anchor" href="#命令" aria-label="Permalink to &quot;命令&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">a\\</span><span style="color:#90A4AE;"> # 在当前行下面插入文本。</span></span>
<span class="line"><span style="color:#E2931D;">i\\</span><span style="color:#90A4AE;"> # 在当前行上面插入文本。</span></span>
<span class="line"><span style="color:#E2931D;">c\\</span><span style="color:#90A4AE;"> # 把选定的行改为新的文本。</span></span>
<span class="line"><span style="color:#E2931D;">d</span><span style="color:#90A4AE;font-style:italic;"> # 删除，删除选择的行。</span></span>
<span class="line"><span style="color:#E2931D;">D</span><span style="color:#90A4AE;font-style:italic;"> # 删除模板块的第一行。</span></span>
<span class="line"><span style="color:#E2931D;">s</span><span style="color:#90A4AE;font-style:italic;"> # 替换指定字符</span></span>
<span class="line"><span style="color:#E2931D;">h</span><span style="color:#90A4AE;font-style:italic;"> # 拷贝模板块的内容到内存中的缓冲区。</span></span>
<span class="line"><span style="color:#E2931D;">H</span><span style="color:#90A4AE;font-style:italic;"> # 追加模板块的内容到内存中的缓冲区。</span></span>
<span class="line"><span style="color:#E2931D;">g</span><span style="color:#90A4AE;font-style:italic;"> # 获得内存缓冲区的内容，并替代当前模板块中的文本。</span></span>
<span class="line"><span style="color:#E2931D;">G</span><span style="color:#90A4AE;font-style:italic;"> # 获得内存缓冲区的内容，并追加到当前模板块文本的后面。</span></span>
<span class="line"><span style="color:#E2931D;">l</span><span style="color:#90A4AE;font-style:italic;"> # 列表不能打印字符的清单。</span></span>
<span class="line"><span style="color:#E2931D;">n</span><span style="color:#90A4AE;font-style:italic;"> # 读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。</span></span>
<span class="line"><span style="color:#E2931D;">N</span><span style="color:#90A4AE;font-style:italic;"> # 追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。</span></span>
<span class="line"><span style="color:#E2931D;">p</span><span style="color:#90A4AE;font-style:italic;"> # 打印模板块的行。</span></span>
<span class="line"><span style="color:#E2931D;">P</span><span style="color:#90A4AE;font-style:italic;"> # (大写) 打印模板块的第一行。</span></span>
<span class="line"><span style="color:#E2931D;">q</span><span style="color:#90A4AE;font-style:italic;"> # 退出Sed。</span></span>
<span class="line"><span style="color:#E2931D;">b</span><span style="color:#91B859;"> lable</span><span style="color:#90A4AE;font-style:italic;"> # 分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。</span></span>
<span class="line"><span style="color:#E2931D;">r</span><span style="color:#91B859;"> file</span><span style="color:#90A4AE;font-style:italic;"> # 从file中读行。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">t</span><span style="color:#91B859;"> label</span><span style="color:#90A4AE;font-style:italic;"> # if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。</span></span>
<span class="line"><span style="color:#E2931D;">T</span><span style="color:#91B859;"> label</span><span style="color:#90A4AE;font-style:italic;"> # 错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。</span></span>
<span class="line"><span style="color:#E2931D;">w</span><span style="color:#91B859;"> file</span><span style="color:#90A4AE;font-style:italic;"> # 写并追加模板块到file末尾。  </span></span>
<span class="line"><span style="color:#E2931D;">W</span><span style="color:#91B859;"> file</span><span style="color:#90A4AE;font-style:italic;"> # 写并追加模板块的第一行到file末尾。  </span></span>
<span class="line"><span style="color:#39ADB5;">!</span><span style="color:#90A4AE;font-style:italic;"> # 表示后面的命令对所有没有被选定的行发生作用。  </span></span>
<span class="line"><span style="color:#91B859;">=</span><span style="color:#90A4AE;font-style:italic;"> # 打印当前行号码。  </span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># # 把注释扩展到下一个换行符以前。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="替换标记" tabindex="-1">替换标记 <a class="header-anchor" href="#替换标记" aria-label="Permalink to &quot;替换标记&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">g</span><span style="color:#90A4AE;font-style:italic;"> # 表示行内全面替换。  </span></span>
<span class="line"><span style="color:#E2931D;">p</span><span style="color:#90A4AE;font-style:italic;"> # 表示打印行。  </span></span>
<span class="line"><span style="color:#E2931D;">w</span><span style="color:#90A4AE;font-style:italic;"> # 表示把行写入一个文件。  </span></span>
<span class="line"><span style="color:#E2931D;">x</span><span style="color:#90A4AE;font-style:italic;"> # 表示互换模板块中的文本和缓冲区中的文本。  </span></span>
<span class="line"><span style="color:#E2931D;">y</span><span style="color:#90A4AE;font-style:italic;"> # 表示把一个字符翻译为另外的字符（但是不用于正则表达式）</span></span>
<span class="line"><span style="color:#E2931D;">\\1</span><span style="color:#90A4AE;font-style:italic;"> # 子串匹配标记</span></span>
<span class="line"><span style="color:#39ADB5;">&amp;</span><span style="color:#90A4AE;font-style:italic;"> # 已匹配字符串标记</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="实例" tabindex="-1">实例 <a class="header-anchor" href="#实例" aria-label="Permalink to &quot;实例&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#90A4AE;font-style:italic;"># 删除空白行</span></span>
<span class="line"><span style="color:#E2931D;">sed</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">/^$/d</span><span style="color:#39ADB5;">&#39;</span><span style="color:#91B859;"> file</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 删除文件的第n行：</span></span>
<span class="line"><span style="color:#E2931D;">sed</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">nd</span><span style="color:#39ADB5;">&#39;</span><span style="color:#91B859;"> file</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 打印从第5行开始到第一个包含以test开始的行之间的所有行</span></span>
<span class="line"><span style="color:#E2931D;">sed</span><span style="color:#91B859;"> -n</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">5,/^test/p</span><span style="color:#39ADB5;">&#39;</span><span style="color:#91B859;"> file</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">在匹配行之后添加</span></span>
<span class="line"><span style="color:#E2931D;">sed</span><span style="color:#91B859;"> -i</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">/string/a new_string</span><span style="color:#39ADB5;">&#39;</span><span style="color:#91B859;"> file</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">在指定行之后添加</span></span>
<span class="line"><span style="color:#E2931D;">sed</span><span style="color:#91B859;"> -i</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">na string</span><span style="color:#39ADB5;">&#39;</span><span style="color:#91B859;"> file</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,14),o=[e];function t(c,r,i,y,b,d){return a(),n("div",null,o)}const m=s(p,[["render",t]]);export{A as __pageData,m as default};

import{_ as a,c as s,o as n,a4 as e}from"./chunks/framework.GYzjcnJh.js";const h=JSON.parse('{"title":"10050","description":"","frontmatter":{},"headers":[],"relativePath":"devops/zabbix/config.md","filePath":"devops/zabbix/config.md"}'),l={name:"devops/zabbix/config.md"},p=e(`<h1 id="_10050" tabindex="-1">10050 <a class="header-anchor" href="#_10050" aria-label="Permalink to &quot;10050&quot;">​</a></h1><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><h2 id="自定义监控项" tabindex="-1">自定义监控项 <a class="header-anchor" href="#自定义监控项" aria-label="Permalink to &quot;自定义监控项&quot;">​</a></h2><p><code>agent2配置文件里/etc/zabbix/zabbix-agent2.conf里面有Include=/etc/zabbix/zabbix_agent2.d/*.conf</code></p><ol><li>命令或脚本获取数据</li><li>添加到zabbix agent 配置中,重启</li><li>web页面创建自定义监控项加入模板或主机</li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#90A4AE;font-style:italic;"># 客户端修改</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># vim /etc/zabbix/zabbix_agent2.d/custom.conf</span></span>
<span class="line"><span style="color:#90A4AE;">UserParameter</span><span style="color:#39ADB5;">=</span><span style="color:#91B859;">key,shell_command</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">systemctl</span><span style="color:#91B859;"> restart</span><span style="color:#91B859;"> zabbix-agent2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 客户端测试</span></span>
<span class="line"><span style="color:#E2931D;">zabbix_agent2</span><span style="color:#91B859;"> -t</span><span style="color:#91B859;"> key</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 也可以服务端测试</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># zabbix_get -s 192.168.2.16 -p 10050 -k key</span></span>
<span class="line"><span style="color:#E2931D;">zabbix_get</span><span style="color:#91B859;"> -s</span><span style="color:#F76D47;"> 192.168.2.16</span><span style="color:#91B859;"> -k</span><span style="color:#91B859;"> key</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>带参数的监控项</strong>:</p><ul><li>UserParameter=key[*],shell_cmd $1</li><li>UserParameter=key[*],shell_cmd $1,$2</li></ul><h2 id="自动发现" tabindex="-1">自动发现 <a class="header-anchor" href="#自动发现" aria-label="Permalink to &quot;自动发现&quot;">​</a></h2><ol><li>web界面添加自动发现的规则</li><li>web界面创建自动发现的动作</li></ol><p><strong>缺点</strong>：</p><ol><li>效率低，</li><li>严重消耗zabbix-server资源和网络带宽</li></ol><h2 id="自动注册" tabindex="-1">自动注册 <a class="header-anchor" href="#自动注册" aria-label="Permalink to &quot;自动注册&quot;">​</a></h2><blockquote><p>前提：自动注册 agnet必须使用主动模式</p></blockquote><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#90A4AE;font-style:italic;"># 1. vim /etc/zabbix/zabbix-agent2.conf</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># Server= 如果配置，则可以同时支持被动和主动模式</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;">ServerActive</span><span style="color:#39ADB5;">=</span></span>
<span class="line"><span style="color:#90A4AE;">Hostname</span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;font-style:italic;">     # 指定主机名，默认为agent 系统主机名</span></span>
<span class="line"><span style="color:#90A4AE;">HostMetadata</span><span style="color:#39ADB5;">=</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 2. web界面添加自动注册动作</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="主动模式和被动模式" tabindex="-1">主动模式和被动模式 <a class="header-anchor" href="#主动模式和被动模式" aria-label="Permalink to &quot;主动模式和被动模式&quot;">​</a></h2><p>相对于zabbix-agent来说</p><p>主动模式，agent主动把数据发给server</p><p>被动模式，agent等待server 获取数据</p>`,19),t=[p];function i(r,o,c,b,d,m){return n(),s("div",null,t)}const y=a(l,[["render",i]]);export{h as __pageData,y as default};

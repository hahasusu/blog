import{_ as s,c as n,o as a,a4 as l}from"./chunks/framework.GYzjcnJh.js";const d=JSON.parse('{"title":"playbook","description":"","frontmatter":{"title":"playbook"},"headers":[],"relativePath":"devops/ansible/playbook.md","filePath":"devops/ansible/playbook.md"}'),p={name:"devops/ansible/playbook.md"},e=l(`<div class="tip custom-block"><p class="custom-block-title">playbook</p><p><code>playbook</code>是ansible实现批量⾃动化最重要的⼿段。在其中可以使⽤变量、引⽤、循环等功能，相⽐<code>ad-hoc</code>⽽⾔， 其功能要强⼤的多。</p></div><h2 id="模板" tabindex="-1">模板 <a class="header-anchor" href="#模板" aria-label="Permalink to &quot;模板&quot;">​</a></h2><p>在任务发送并在目标计算机上执行之前，所有模板都发生在 Ansible 控制节点上。这种方法最大限度地减少了目标上的包要求（仅控制节点上需要 jinja2）。它还限制 Ansible 传递到目标机器的数据量。 Ansible 在控制节点上解析模板，仅将每个任务所需的信息传递到目标机器，而不是在控制节点上传递所有数据并在目标上解析</p><h2 id="tag" tabindex="-1">tag <a class="header-anchor" href="#tag" aria-label="Permalink to &quot;tag&quot;">​</a></h2><p>只执行特定任务</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">tasks:</span></span>
<span class="line"><span style="color:#E2931D;">   -</span><span style="color:#91B859;"> name:</span></span>
<span class="line"><span style="color:#E2931D;">     tags:</span><span style="color:#90A4AE;"> [tagname]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">ansible-playbook</span><span style="color:#91B859;"> -t</span><span style="color:#91B859;"> tagname</span><span style="color:#91B859;"> maim.yaml</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="条件判断when" tabindex="-1">条件判断when <a class="header-anchor" href="#条件判断when" aria-label="Permalink to &quot;条件判断when&quot;">​</a></h2><blockquote><p>when语句中的变量不需要使用 大括号</p></blockquote><p>when条件语句的处理逻辑是：当playbook或task执行时，ansible会在所有主机上进行测试，只在测试通过的主机上执行该任务。</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E53935;">tasks</span><span style="color:#39ADB5;">:</span></span>
<span class="line"><span style="color:#E53935;">    name</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> install pkg</span></span>
<span class="line"><span style="color:#E53935;">      dnf</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> name=</span></span>
<span class="line"><span style="color:#E53935;">      when</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> ansible_distribution_file_variety == &quot;RedHat&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E53935;">    name</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> install pkg</span></span>
<span class="line"><span style="color:#E53935;">      apt</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> name=</span></span>
<span class="line"><span style="color:#E53935;">      when</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> ansible_distribution_file_variety == &quot;Debian&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="安装nginx" tabindex="-1">安装Nginx <a class="header-anchor" href="#安装nginx" aria-label="Permalink to &quot;安装Nginx&quot;">​</a></h2><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">-</span><span style="color:#E53935;"> hosts</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> webserver</span></span>
<span class="line"><span style="color:#E53935;">  remote_user</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> root</span></span>
<span class="line"><span style="color:#E53935;">  vars</span><span style="color:#39ADB5;">:</span></span>
<span class="line"><span style="color:#E53935;">    version</span><span style="color:#39ADB5;">:</span><span style="color:#39ADB5;"> &quot;</span><span style="color:#91B859;">1.24.0</span><span style="color:#39ADB5;">&quot;</span></span>
<span class="line"><span style="color:#E53935;">    install_dir</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> /usr/local/nginx</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E53935;">  tasks</span><span style="color:#39ADB5;">:</span></span>
<span class="line"><span style="color:#39ADB5;">    -</span><span style="color:#E53935;"> name</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> 安装依赖包</span></span>
<span class="line"><span style="color:#E53935;">      dnf</span><span style="color:#39ADB5;">:</span></span>
<span class="line"><span style="color:#E53935;">        name</span><span style="color:#39ADB5;">:</span><span style="color:#39ADB5;"> [</span><span style="color:#91B859;">make</span><span style="color:#39ADB5;">,</span><span style="color:#91B859;"> zlib</span><span style="color:#39ADB5;">,</span><span style="color:#91B859;"> gcc</span><span style="color:#39ADB5;">,</span><span style="color:#91B859;"> gcc-c++</span><span style="color:#39ADB5;">,</span><span style="color:#91B859;"> openssl</span><span style="color:#39ADB5;">,</span><span style="color:#91B859;"> zlib-devel</span><span style="color:#39ADB5;">]</span></span>
<span class="line"><span style="color:#E53935;">        state</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> latest</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">    -</span><span style="color:#E53935;"> name</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> 下载源码包</span></span>
<span class="line"><span style="color:#E53935;">      unarchive</span><span style="color:#39ADB5;">:</span></span>
<span class="line"><span style="color:#E53935;">        src</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> http://192.168.2.10/linux/nginx-{{ version }}.tar.gz</span></span>
<span class="line"><span style="color:#E53935;">        dest</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> /usr/local/src</span></span>
<span class="line"><span style="color:#E53935;">        remote_src</span><span style="color:#39ADB5;">:</span><span style="color:#FF5370;"> yes</span></span>
<span class="line"><span style="color:#E53935;">        creates</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> /usr/local/src/nginx-{{ version }}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">    -</span><span style="color:#E53935;"> name</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> 编译安装</span></span>
<span class="line"><span style="color:#E53935;">      shell</span><span style="color:#39ADB5;">:</span></span>
<span class="line"><span style="color:#E53935;">        chdir</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> /usr/local/src/nginx-{{ version }}</span></span>
<span class="line"><span style="color:#E53935;">        cmd</span><span style="color:#39ADB5;">:</span><span style="color:#39ADB5;font-style:italic;"> &gt;</span><span style="color:#9C3EDA;">-</span></span>
<span class="line"><span style="color:#91B859;">          ./configure --prefix={{ install_dir }} --user=nginx --group=nginx</span></span>
<span class="line"><span style="color:#91B859;">          --with-http_ssl_module --with-http_v2_module --with-http_stub_status_module</span></span>
<span class="line"><span style="color:#91B859;">          --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module &amp;&amp; make &amp;&amp; make install</span></span>
<span class="line"><span style="color:#E53935;">        creates</span><span style="color:#39ADB5;">:</span><span style="color:#39ADB5;"> &quot;</span><span style="color:#91B859;">{{ install_dir }}/sbin/nginx</span><span style="color:#39ADB5;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">    -</span><span style="color:#E53935;"> name</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> 拷贝service文件</span></span>
<span class="line"><span style="color:#E53935;">      copy</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> src=nginx.service dest=/lib/systemd/system/nginx.service</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">    -</span><span style="color:#E53935;"> name</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> 模板测试</span></span>
<span class="line"><span style="color:#E53935;">      template</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> src=test.j2 dest=/opt/nginx.service</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">    -</span><span style="color:#E53935;"> name</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> 启动nginx</span></span>
<span class="line"><span style="color:#E53935;">      systemd_service</span><span style="color:#39ADB5;">:</span><span style="color:#91B859;"> name=nginx state=started enabled=true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div>`,12),o=[e];function r(c,t,i,b,y,m){return a(),n("div",null,o)}const B=s(p,[["render",r]]);export{d as __pageData,B as default};

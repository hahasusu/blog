import{_ as s,c as n,o as a,a4 as l}from"./chunks/framework.GYzjcnJh.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docker/use.md","filePath":"backend/docker/use.md"}'),p={name:"docker/use.md"},e=l(`<h1 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h1><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">-it:</span><span style="color:#91B859;"> 以命令行模式进入该容器</span></span>
<span class="line"><span style="color:#E2931D;">-i:</span><span style="color:#91B859;"> 交互式操作。</span></span>
<span class="line"><span style="color:#E2931D;">-t:</span><span style="color:#91B859;"> 终端。</span></span>
<span class="line"><span style="color:#E2931D;">-d</span><span style="color:#91B859;"> 指定容器的运行模式,加了</span><span style="color:#91B859;"> -d</span><span style="color:#91B859;"> 参数默认不会进入容器，想要进入容器需要使用指令</span><span style="color:#91B859;"> docker</span><span style="color:#91B859;"> exec</span></span>
<span class="line"><span style="color:#E2931D;">进入容器</span></span>
<span class="line"><span style="color:#E2931D;">在使用</span><span style="color:#91B859;"> -d</span><span style="color:#91B859;"> 参数时，容器启动后会进入后台。此时想要进入容器，可以通过以下指令进入：</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> attach</span><span style="color:#91B859;"> id</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> exec</span><span style="color:#91B859;"> -it</span><span style="color:#91B859;"> id</span><span style="color:#91B859;"> /bin/bash：推荐使用</span><span style="color:#91B859;"> docker</span><span style="color:#91B859;"> exec</span><span style="color:#91B859;"> 命令，因为此退出容器终端，不会导致容器的停止。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">-P:将容器内部使用的端口随机映射到我们使用的主机上。</span></span>
<span class="line"><span style="color:#E2931D;">-p</span><span style="color:#91B859;"> 主机port:容器port</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="镜像" tabindex="-1">镜像 <a class="header-anchor" href="#镜像" aria-label="Permalink to &quot;镜像&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#90A4AE;font-style:italic;"># 查看可用版本</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> search</span><span style="color:#91B859;"> ...</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 安装镜像 默认tag为latest</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> pull</span><span style="color:#91B859;"> image_name[:tag]</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 查看已安装镜像</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> images</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 查看镜像详情</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> inspect</span><span style="color:#90A4AE;"> [ </span><span style="color:#91B859;">镜像名</span><span style="color:#91B859;"> or</span><span style="color:#91B859;"> 镜像</span><span style="color:#91B859;"> id</span><span style="color:#91B859;"> ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 查看容器镜像所占用的空间</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> system</span><span style="color:#91B859;"> df</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 删除镜像 , -f 强制删除</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> rmi</span><span style="color:#90A4AE;"> [ </span><span style="color:#91B859;">镜像名</span><span style="color:#91B859;"> or</span><span style="color:#91B859;"> 镜像</span><span style="color:#91B859;"> id</span><span style="color:#91B859;"> ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 删除所有镜像</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> rmi</span><span style="color:#91B859;"> -f</span><span style="color:#39ADB5;"> $(</span><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> images</span><span style="color:#91B859;"> -aq</span><span style="color:#39ADB5;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="容器" tabindex="-1">容器 <a class="header-anchor" href="#容器" aria-label="Permalink to &quot;容器&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#90A4AE;font-style:italic;"># 创建容器, 交互式， 默认shell 为/bin/bash ,可省略</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> run</span><span style="color:#91B859;"> -it</span><span style="color:#91B859;"> --name=name</span><span style="color:#91B859;"> images_name</span><span style="color:#90A4AE;"> [/bin/bash]</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 创建容器，守护式</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> run</span><span style="color:#91B859;"> -d</span><span style="color:#90A4AE;"> [iamge_name]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 两种退出方式</span></span>
<span class="line"><span style="color:#E2931D;">ctrl+d</span><span style="color:#91B859;"> 或</span><span style="color:#91B859;"> exit</span><span style="color:#91B859;"> 容器停止</span></span>
<span class="line"><span style="color:#E2931D;">ctrl+p+q</span><span style="color:#91B859;"> 容器不停止</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 重新进入容器</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> exec</span><span style="color:#91B859;"> -it</span><span style="color:#91B859;"> ID</span><span style="color:#91B859;"> /bin/bash</span><span style="color:#91B859;"> 开启一个新的终端，可以在里面进行操作</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> attach</span><span style="color:#91B859;"> ID</span><span style="color:#91B859;"> 不会开启新的终端,退出后容器会停止</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 启动停止的容器</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> start</span><span style="color:#90A4AE;"> [容器名 </span><span style="color:#91B859;">or</span><span style="color:#91B859;"> id]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 停止容器</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> stop</span><span style="color:#91B859;"> 容器名</span><span style="color:#91B859;"> or</span><span style="color:#91B859;"> id</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 强制停止容器</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> kill</span><span style="color:#91B859;"> 容器名</span><span style="color:#91B859;"> or</span><span style="color:#91B859;"> id</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 查看运行中的容器(-a,查看所有容器，-aq 只显示容器ID， -l显示最近创建的容器，-n 2,近两次运行过的容器）</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> ps</span><span style="color:#90A4AE;"> [-aq]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 删除容器 -f 删除正在运行的容器</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> rm</span><span style="color:#90A4AE;"> [id </span><span style="color:#91B859;">or</span><span style="color:#91B859;"> name]</span><span style="color:#90A4AE;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 查看端口映射</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> port</span><span style="color:#90A4AE;"> [ </span><span style="color:#91B859;">容器名</span><span style="color:#91B859;"> or</span><span style="color:#91B859;"> id]</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 查看容器详情</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> inspect</span><span style="color:#90A4AE;"> [ </span><span style="color:#91B859;">容器名</span><span style="color:#91B859;"> or</span><span style="color:#91B859;"> 容器</span><span style="color:#91B859;"> id</span><span style="color:#91B859;"> ]</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 查看容器中正在运行的进程</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> top</span><span style="color:#90A4AE;"> [ </span><span style="color:#91B859;">容器名</span><span style="color:#91B859;"> or</span><span style="color:#91B859;"> 容器</span><span style="color:#91B859;"> id</span><span style="color:#91B859;"> ]</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 一次删除多个容器</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> rm</span><span style="color:#39ADB5;"> $(</span><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> ps</span><span style="color:#91B859;"> -aq</span><span style="color:#39ADB5;">)</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> ps</span><span style="color:#91B859;"> -aq</span><span style="color:#39ADB5;"> |</span><span style="color:#E2931D;"> xargs</span><span style="color:#91B859;"> docker</span><span style="color:#91B859;"> rm</span><span style="color:#90A4AE;"> </span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 查看容器内部的标准输出,可选参数-f , 类似tail -f</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> logs</span><span style="color:#90A4AE;"> [容器名 </span><span style="color:#91B859;">or</span><span style="color:#91B859;"> id]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 查看容器内部运行的进程</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> top</span><span style="color:#91B859;"> ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 查看 Docker 的底层信息。它会返回一个 JSON 文件记录着 Docker 容器的配置和状态信息。</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> inspect</span><span style="color:#91B859;"> ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 复制</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> cp</span><span style="color:#91B859;"> id:/filename</span><span style="color:#91B859;"> src</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> cp</span><span style="color:#91B859;"> sr</span><span style="color:#91B859;"> id:/filename</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 导出</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> export</span><span style="color:#91B859;"> id</span><span style="color:#39ADB5;"> &gt;</span><span style="color:#91B859;"> 文件名.tar</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><h2 id="docker-commit" tabindex="-1">docker commit <a class="header-anchor" href="#docker-commit" aria-label="Permalink to &quot;docker commit&quot;">​</a></h2><blockquote><p>提交容器副本使之成为一个新的镜像</p></blockquote><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> commit</span><span style="color:#91B859;"> -m=</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">描述信息</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;"> -a=</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">author</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;"> ID</span><span style="color:#91B859;"> 要创建的镜像名[:tag]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="镜像发布到阿里云" tabindex="-1">镜像发布到阿里云 <a class="header-anchor" href="#镜像发布到阿里云" aria-label="Permalink to &quot;镜像发布到阿里云&quot;">​</a></h2><blockquote><p><a href="https://cr.console.aliyun.com/cn-hangzhou/instances" target="_blank" rel="noreferrer">https://cr.console.aliyun.com/cn-hangzhou/instances</a></p></blockquote><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">1.</span><span style="color:#91B859;"> 创建命名空间</span></span>
<span class="line"><span style="color:#E2931D;">2.</span><span style="color:#91B859;"> 创建镜像仓库</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">登录阿里云Docker</span><span style="color:#91B859;"> Registry</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> login</span><span style="color:#91B859;"> --username=alonelzb</span><span style="color:#91B859;"> registry.cn-hangzhou.aliyuncs.com</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">从Registry中拉取镜像</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> pull</span><span style="color:#91B859;"> registry.cn-hangzhou.aliyuncs.com/custom_images/test:[镜像版本号]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">将镜像推送到Registry</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> tag</span><span style="color:#90A4AE;"> [ImageId] registry.cn-hangzhou.aliyuncs.com/custom_images/test:</span><span style="color:#39ADB5;">[</span><span style="color:#90A4AE;">镜像版本号</span><span style="color:#39ADB5;">]</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> push</span><span style="color:#91B859;"> registry.cn-hangzhou.aliyuncs.com/custom_images/test:[镜像版本号]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="镜像发布到本地私有库" tabindex="-1">镜像发布到本地私有库 <a class="header-anchor" href="#镜像发布到本地私有库" aria-label="Permalink to &quot;镜像发布到本地私有库&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#90A4AE;font-style:italic;"># 1. 下载registry</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> pull</span><span style="color:#91B859;"> registry</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 2. 运行registry，相当于本地有个私有docker Hub</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 默认情况下，仓库创建在容器内的/var/lib/registry</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> run</span><span style="color:#91B859;"> -d</span><span style="color:#91B859;"> -p</span><span style="color:#91B859;"> 5000:5000</span><span style="color:#91B859;"> -v</span><span style="color:#91B859;"> /data:/tmp/registry</span><span style="color:#91B859;"> --privileged=true</span><span style="color:#91B859;"> registry</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 3. 将镜像修改为符合私服规范的tag</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> tag</span><span style="color:#91B859;"> ID</span><span style="color:#91B859;"> ip:5000/镜像[:tag]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 4. 修改/etc/docker/daemon.json配置文件使之支持http</span></span>
<span class="line"><span style="color:#E2931D;">&quot;insecure-registries&quot;</span><span style="color:#6182B8;">:</span><span style="color:#90A4AE;"> [</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">ip:5000</span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 推送到本地私有库</span></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> push</span><span style="color:#91B859;"> ip:5000/镜像名</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="容器数据卷" tabindex="-1">容器数据卷 <a class="header-anchor" href="#容器数据卷" aria-label="Permalink to &quot;容器数据卷&quot;">​</a></h2><blockquote><p>作用：数据的持久化 实时同步到宿主机</p></blockquote><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> run</span><span style="color:#91B859;"> -it</span><span style="color:#91B859;"> -v</span><span style="color:#91B859;"> 宿主机绝对路径:/容器内目录</span><span style="color:#91B859;"> 容器名或ID</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">Docker</span><span style="color:#91B859;"> 挂载主机目录访问出现cannot</span><span style="color:#91B859;"> open</span><span style="color:#91B859;"> directory:Permission</span><span style="color:#91B859;"> denied</span></span>
<span class="line"><span style="color:#E2931D;">解决：在挂载目录后添加</span><span style="color:#91B859;"> --privileged=true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">默认路径：/var/lib/docker/volumes</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> help</span></span>
<span class="line"><span style="color:#E2931D;">Commands:</span></span>
<span class="line"><span style="color:#E2931D;">  create</span><span style="color:#91B859;">      Create</span><span style="color:#91B859;"> a</span><span style="color:#91B859;"> volume</span></span>
<span class="line"><span style="color:#E2931D;">  inspect</span><span style="color:#91B859;">     Display</span><span style="color:#91B859;"> detailed</span><span style="color:#91B859;"> information</span><span style="color:#91B859;"> on</span><span style="color:#91B859;"> one</span><span style="color:#91B859;"> or</span><span style="color:#91B859;"> more</span><span style="color:#91B859;"> volumes</span></span>
<span class="line"><span style="color:#E2931D;">  ls</span><span style="color:#91B859;">          List</span><span style="color:#91B859;"> volumes</span></span>
<span class="line"><span style="color:#E2931D;">  prune</span><span style="color:#91B859;">       Remove</span><span style="color:#91B859;"> unused</span><span style="color:#91B859;"> local</span><span style="color:#91B859;"> volumes</span></span>
<span class="line"><span style="color:#E2931D;">  rm</span><span style="color:#91B859;">          Remove</span><span style="color:#91B859;"> one</span><span style="color:#91B859;"> or</span><span style="color:#91B859;"> more</span><span style="color:#91B859;"> volumes</span></span>
<span class="line"><span style="color:#E2931D;">  update</span><span style="color:#91B859;">      Update</span><span style="color:#91B859;"> a</span><span style="color:#91B859;"> volume</span><span style="color:#90A4AE;"> (cluster </span><span style="color:#91B859;">volumes</span><span style="color:#91B859;"> only</span><span style="color:#90A4AE;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,17),o=[e];function r(c,t,i,y,b,u){return a(),n("div",null,o)}const B=s(p,[["render",r]]);export{d as __pageData,B as default};

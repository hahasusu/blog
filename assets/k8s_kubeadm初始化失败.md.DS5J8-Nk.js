import{_ as s,c as n,o as a,a4 as e}from"./chunks/framework.GYzjcnJh.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"k8s/kubeadm初始化失败.md","filePath":"k8s/kubeadm初始化失败.md"}'),l={name:"k8s/kubeadm初始化失败.md"},o=e(`<h2 id="init-失败" tabindex="-1">init 失败 <a class="header-anchor" href="#init-失败" aria-label="Permalink to &quot;init 失败&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>基础镜像<code>pause</code>的拉取地址需要单独设置，否则还是会从<code>registry.k8s.io</code>来拉取，导致<code>init</code>的时候卡住，并最终失败</p></div><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#39ADB5;">[</span><span style="color:#90A4AE;">init</span><span style="color:#39ADB5;">]</span><span style="color:#90A4AE;"> this might take a minute or longer </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#E2931D;"> the</span><span style="color:#91B859;"> control</span><span style="color:#91B859;"> plane</span><span style="color:#91B859;"> images</span><span style="color:#91B859;"> have</span><span style="color:#91B859;"> to</span><span style="color:#91B859;"> be</span><span style="color:#91B859;"> pulled</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">Unfortunately,</span><span style="color:#91B859;"> an</span><span style="color:#91B859;"> error</span><span style="color:#91B859;"> has</span><span style="color:#91B859;"> occurred:</span></span>
<span class="line"><span style="color:#E2931D;">timed</span><span style="color:#91B859;"> out</span><span style="color:#91B859;"> waiting</span><span style="color:#91B859;"> for</span><span style="color:#91B859;"> the</span><span style="color:#91B859;"> condition</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">This</span><span style="color:#91B859;"> error</span><span style="color:#91B859;"> is</span><span style="color:#91B859;"> likely</span><span style="color:#91B859;"> caused</span><span style="color:#91B859;"> by:</span></span>
<span class="line"><span style="color:#E2931D;">-</span><span style="color:#91B859;"> The</span><span style="color:#91B859;"> kubelet</span><span style="color:#91B859;"> is</span><span style="color:#91B859;"> not</span><span style="color:#91B859;"> running</span></span>
<span class="line"><span style="color:#E2931D;">-</span><span style="color:#91B859;"> The</span><span style="color:#91B859;"> kubelet</span><span style="color:#91B859;"> is</span><span style="color:#91B859;"> unhealthy</span><span style="color:#91B859;"> due</span><span style="color:#91B859;"> to</span><span style="color:#91B859;"> a</span><span style="color:#91B859;"> misconfiguration</span><span style="color:#91B859;"> of</span><span style="color:#91B859;"> the</span><span style="color:#91B859;"> node</span><span style="color:#91B859;"> in</span><span style="color:#91B859;"> some</span><span style="color:#91B859;"> way</span><span style="color:#90A4AE;"> (required </span><span style="color:#91B859;">cgroups</span><span style="color:#91B859;"> disabled</span><span style="color:#90A4AE;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E2931D;">If</span><span style="color:#91B859;"> you</span><span style="color:#91B859;"> are</span><span style="color:#91B859;"> on</span><span style="color:#91B859;"> a</span><span style="color:#91B859;"> systemd-powered</span><span style="color:#91B859;"> system,</span><span style="color:#91B859;"> you</span><span style="color:#91B859;"> can</span><span style="color:#91B859;"> try</span><span style="color:#91B859;"> to</span><span style="color:#91B859;"> troubleshoot</span><span style="color:#91B859;"> the</span><span style="color:#91B859;"> error</span><span style="color:#91B859;"> with</span><span style="color:#91B859;"> the</span><span style="color:#91B859;"> following</span><span style="color:#91B859;"> commands:</span></span>
<span class="line"><span style="color:#E2931D;">-</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">systemctl status kubelet</span><span style="color:#39ADB5;">&#39;</span></span>
<span class="line"><span style="color:#E2931D;">-</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">journalctl -xeu kubelet</span><span style="color:#39ADB5;">&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>解决办法</strong>:</p><ol><li><strong>最简单就是打一个<code>registry.k8s.io/pause:3.9</code>的Tag</strong></li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">docker</span><span style="color:#91B859;"> tag</span><span style="color:#91B859;"> registry.aliyuncs.com/google_containers/pause:3.9</span><span style="color:#91B859;"> registry.k8s.io/pause:3.9</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li><p><strong>修改cri-docker.service文件</strong></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#90A4AE;">ExecStart</span><span style="color:#39ADB5;">=</span><span style="color:#91B859;">/usr/bin/cri-dockerd</span><span style="color:#90A4AE;"> --pod-infra-container-image</span><span style="color:#39ADB5;">=</span><span style="color:#91B859;">仓库地址/pause:tag</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>以通过修改<code>kubeadm.conf</code>中的<em>InitConfiguration</em>的<code>nodeRegistration:kubeletExtraArgs:pod-infra-container-image</code>参数来设置基础镜像</p></li></ol><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">kind:</span><span style="color:#91B859;"> InitConfiguration</span></span>
<span class="line"><span style="color:#E2931D;">nodeRegistration:</span></span>
<span class="line"><span style="color:#E2931D;">  kubeletExtraArgs:</span></span>
<span class="line"><span style="color:#E2931D;">    pod-infra-container-image:</span><span style="color:#91B859;"> registry.aliyuncs.com/google_containers/pause:3.9</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="关键配置" tabindex="-1">关键配置 <a class="header-anchor" href="#关键配置" aria-label="Permalink to &quot;关键配置&quot;">​</a></h2><ul><li>advertiseAddress [宿主机ip(内网)]</li><li>imageRepository 使用国内镜像如阿里云-&gt; imageRepository: registry.aliyuncs.com/google_containers</li><li>nodeRegistration.criSocket <ul><li>containerd unix:///var/run/containerd/containerd.sock</li><li>CRI-O unix:///var/run/crio/crio.sock</li><li>Docker Engine (using cri-dockerd) unix:///var/run/cri-dockerd.sock</li></ul></li></ul><h2 id="重置" tabindex="-1">重置 <a class="header-anchor" href="#重置" aria-label="Permalink to &quot;重置&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#E2931D;">kubeadm</span><span style="color:#91B859;"> reset</span><span style="color:#91B859;"> unix:///var/run/cri-dockerd.sock</span></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 清理 /etc/cni/net.d 中的网络配置</span></span>
<span class="line"><span style="color:#E2931D;">rm</span><span style="color:#91B859;"> -rf</span><span style="color:#91B859;"> /etc/cni/net.d</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;"># 清理容器运行时</span></span>
<span class="line"><span style="color:#E2931D;">systemctl</span><span style="color:#91B859;"> stop</span><span style="color:#91B859;"> docker</span></span>
<span class="line"><span style="color:#E2931D;">rm</span><span style="color:#91B859;"> -rf</span><span style="color:#91B859;"> /var/lib/docker</span></span>
<span class="line"><span style="color:#E2931D;">systemctl</span><span style="color:#91B859;"> start</span><span style="color:#91B859;"> docker</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,12),p=[o];function r(t,c,i,y,d,u){return a(),n("div",null,p)}const B=s(l,[["render",r]]);export{m as __pageData,B as default};

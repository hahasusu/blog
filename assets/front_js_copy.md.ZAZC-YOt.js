import{_ as s,c as a,o as n,a4 as l}from"./chunks/framework.GYzjcnJh.js";const m=JSON.parse('{"title":"引用类型的拷贝","description":"","frontmatter":{"date":"2024-03-01 08:44:41","title":"引用类型的拷贝"},"headers":[],"relativePath":"front/js/copy.md","filePath":"front/js/copy.md"}'),p={name:"front/js/copy.md"},o=l(`<h1 id="引用类型的拷贝" tabindex="-1">引用类型的拷贝 <a class="header-anchor" href="#引用类型的拷贝" aria-label="Permalink to &quot;引用类型的拷贝&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title"><strong>引用类型的特点</strong></p><ul><li>因为 JavaScript 不允许直接访问内存位置（即不能直接操作引用类型所在的内存空间），所以引用类型在 栈内存 中存储的是地址（即内存指针），而引用类型中的数据（方法或属性）是存储在 堆内存 中</li><li>保存引用类型的变量是 按引用 (by reference) 访问 ，当我们访问和操作一个对象时，实际上操作的是对该对象的引用而非实际的对象本身</li><li>复制引用类型时只会复制内存指针</li></ul></div><h2 id="浅拷贝" tabindex="-1">浅拷贝 <a class="header-anchor" href="#浅拷贝" aria-label="Permalink to &quot;浅拷贝&quot;">​</a></h2><blockquote><p>拷贝是创建一个新对象，这个对象有着原始对象属性值的一份精确拷贝：基本类型拷贝的是值，引用类型拷贝的就是内存地址； <strong>所以当我们操作新对象中的引用类型时会影响源对象</strong></p></blockquote><h3 id="object-assign" tabindex="-1">Object.assign() <a class="header-anchor" href="#object-assign" aria-label="Permalink to &quot;Object.assign()&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#9C3EDA;">const</span><span style="color:#90A4AE;"> obj1 </span><span style="color:#39ADB5;">=</span><span style="color:#39ADB5;"> {</span></span>
<span class="line"><span style="color:#E53935;">  name</span><span style="color:#39ADB5;">:</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">maomao</span><span style="color:#39ADB5;">&#39;</span><span style="color:#39ADB5;">,</span></span>
<span class="line"><span style="color:#E53935;">  props</span><span style="color:#39ADB5;">:</span><span style="color:#39ADB5;"> {</span><span style="color:#E53935;"> a</span><span style="color:#39ADB5;">:</span><span style="color:#F76D47;"> 1</span><span style="color:#39ADB5;"> },</span></span>
<span class="line"><span style="color:#39ADB5;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9C3EDA;">const</span><span style="color:#90A4AE;"> obj2 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> Object</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">assign</span><span style="color:#90A4AE;">(</span><span style="color:#39ADB5;">{},</span><span style="color:#90A4AE;"> obj1)</span></span>
<span class="line"><span style="color:#90A4AE;">obj2</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">name </span><span style="color:#39ADB5;">=</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">aa</span><span style="color:#39ADB5;">&#39;</span></span>
<span class="line"><span style="color:#90A4AE;">obj2</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">props</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">a</span><span style="color:#39ADB5;">++</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;">obj1 </span><span style="color:#90A4AE;font-style:italic;">// { name: &#39;maomao&#39;, props: { a: 2 } }</span></span>
<span class="line"><span style="color:#90A4AE;">obj2 </span><span style="color:#90A4AE;font-style:italic;">// { name: &#39;aa&#39;, props: { a: 2 } }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="array-prototype-concat" tabindex="-1">Array.prototype.concat() <a class="header-anchor" href="#array-prototype-concat" aria-label="Permalink to &quot;Array.prototype.concat()&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#9C3EDA;">const</span><span style="color:#90A4AE;"> arr1 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> [</span><span style="color:#F76D47;">1</span><span style="color:#39ADB5;">,</span><span style="color:#F76D47;"> 2</span><span style="color:#39ADB5;">,</span><span style="color:#F76D47;"> 3</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> [</span><span style="color:#F76D47;">4</span><span style="color:#39ADB5;">,</span><span style="color:#F76D47;"> 5</span><span style="color:#90A4AE;">]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9C3EDA;">const</span><span style="color:#90A4AE;"> arr2 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> arr1</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">concat</span><span style="color:#90A4AE;">()</span></span>
<span class="line"><span style="color:#90A4AE;">arr2[</span><span style="color:#F76D47;">0</span><span style="color:#90A4AE;">] </span><span style="color:#39ADB5;">=</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">arr2</span><span style="color:#39ADB5;">&#39;</span></span>
<span class="line"><span style="color:#90A4AE;">arr2[</span><span style="color:#F76D47;">3</span><span style="color:#90A4AE;">][</span><span style="color:#F76D47;">0</span><span style="color:#90A4AE;">] </span><span style="color:#39ADB5;">=</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">arr2</span><span style="color:#39ADB5;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;">arr1 </span><span style="color:#90A4AE;font-style:italic;">// [1, 2, 3, [&#39;arr2&#39;, 5]];</span></span>
<span class="line"><span style="color:#90A4AE;">arr2 </span><span style="color:#90A4AE;font-style:italic;">// [&#39;arr2&#39;, 2, 3, [&#39;arr2&#39;, 5]];</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="array-prototype-slice" tabindex="-1">Array.prototype.slice() <a class="header-anchor" href="#array-prototype-slice" aria-label="Permalink to &quot;Array.prototype.slice()&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#9C3EDA;">const</span><span style="color:#90A4AE;"> arr1 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> [</span><span style="color:#F76D47;">1</span><span style="color:#39ADB5;">,</span><span style="color:#F76D47;"> 2</span><span style="color:#39ADB5;">,</span><span style="color:#F76D47;"> 3</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> [</span><span style="color:#F76D47;">4</span><span style="color:#39ADB5;">,</span><span style="color:#F76D47;"> 5</span><span style="color:#90A4AE;">]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9C3EDA;">const</span><span style="color:#90A4AE;"> arr2 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> arr1</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">slice</span><span style="color:#90A4AE;">()</span></span>
<span class="line"><span style="color:#90A4AE;">arr2[</span><span style="color:#F76D47;">0</span><span style="color:#90A4AE;">] </span><span style="color:#39ADB5;">=</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">arr2</span><span style="color:#39ADB5;">&#39;</span></span>
<span class="line"><span style="color:#90A4AE;">arr2[</span><span style="color:#F76D47;">3</span><span style="color:#90A4AE;">][</span><span style="color:#F76D47;">0</span><span style="color:#90A4AE;">] </span><span style="color:#39ADB5;">=</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">arr2</span><span style="color:#39ADB5;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;">arr1 </span><span style="color:#90A4AE;font-style:italic;">// [1, 2, 3, [&#39;arr2&#39;, 5]];</span></span>
<span class="line"><span style="color:#90A4AE;">arr2 </span><span style="color:#90A4AE;font-style:italic;">// [&#39;arr2&#39;, 2, 3, [&#39;arr2&#39;, 5]];</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="es6-扩展运算符" tabindex="-1">ES6 扩展运算符 <a class="header-anchor" href="#es6-扩展运算符" aria-label="Permalink to &quot;ES6 扩展运算符&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#90A4AE;font-style:italic;">/* 对象 */</span></span>
<span class="line"><span style="color:#9C3EDA;">const</span><span style="color:#90A4AE;"> obj1 </span><span style="color:#39ADB5;">=</span><span style="color:#39ADB5;"> {</span></span>
<span class="line"><span style="color:#E53935;">  name</span><span style="color:#39ADB5;">:</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">maomao</span><span style="color:#39ADB5;">&#39;</span><span style="color:#39ADB5;">,</span></span>
<span class="line"><span style="color:#E53935;">  props</span><span style="color:#39ADB5;">:</span><span style="color:#39ADB5;"> {</span><span style="color:#E53935;"> a</span><span style="color:#39ADB5;">:</span><span style="color:#F76D47;"> 1</span><span style="color:#39ADB5;"> },</span></span>
<span class="line"><span style="color:#39ADB5;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9C3EDA;">const</span><span style="color:#90A4AE;"> obj2 </span><span style="color:#39ADB5;">=</span><span style="color:#39ADB5;"> {</span><span style="color:#39ADB5;"> ...</span><span style="color:#90A4AE;">obj1 </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">obj2</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">name </span><span style="color:#39ADB5;">=</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">zs</span><span style="color:#39ADB5;">&#39;</span></span>
<span class="line"><span style="color:#90A4AE;">obj2</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">props</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">a</span><span style="color:#39ADB5;">++</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;">obj1 </span><span style="color:#90A4AE;font-style:italic;">// { name: &#39;maomao&#39;, props: { a: 2 } }</span></span>
<span class="line"><span style="color:#90A4AE;">obj2 </span><span style="color:#90A4AE;font-style:italic;">// { name: &#39;zs&#39;, props: { a: 2 } }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;">/* 数组 */</span></span>
<span class="line"><span style="color:#9C3EDA;">const</span><span style="color:#90A4AE;"> arr1 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> [</span><span style="color:#F76D47;">1</span><span style="color:#39ADB5;">,</span><span style="color:#F76D47;"> 2</span><span style="color:#39ADB5;">,</span><span style="color:#F76D47;"> 3</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> [</span><span style="color:#F76D47;">4</span><span style="color:#39ADB5;">,</span><span style="color:#F76D47;"> 5</span><span style="color:#90A4AE;">]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9C3EDA;">const</span><span style="color:#90A4AE;"> arr2 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> [</span><span style="color:#39ADB5;">...</span><span style="color:#90A4AE;">arr1]</span></span>
<span class="line"><span style="color:#90A4AE;">arr2[</span><span style="color:#F76D47;">0</span><span style="color:#90A4AE;">] </span><span style="color:#39ADB5;">=</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">arr2</span><span style="color:#39ADB5;">&#39;</span></span>
<span class="line"><span style="color:#90A4AE;">arr2[</span><span style="color:#F76D47;">3</span><span style="color:#90A4AE;">][</span><span style="color:#F76D47;">0</span><span style="color:#90A4AE;">] </span><span style="color:#39ADB5;">=</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">arr2</span><span style="color:#39ADB5;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;">arr1 </span><span style="color:#90A4AE;font-style:italic;">// [1, 2, 3, [&#39;arr2&#39;, 5]];</span></span>
<span class="line"><span style="color:#90A4AE;">arr2 </span><span style="color:#90A4AE;font-style:italic;">// [&#39;arr2&#39;, 2, 3, [&#39;arr2&#39;, 5]];</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="深拷贝" tabindex="-1">深拷贝 <a class="header-anchor" href="#深拷贝" aria-label="Permalink to &quot;深拷贝&quot;">​</a></h2><blockquote><p>深拷贝是将一个对象从内存中完整的拷贝一份出来，即从堆内存中开辟一个新的区域存放新对象 <strong>所以修改新对象不会影响原对象</strong></p></blockquote><h3 id="json-parse-json-stringify" tabindex="-1">JSON.parse(JSON.stringify()) <a class="header-anchor" href="#json-parse-json-stringify" aria-label="Permalink to &quot;JSON.parse(JSON.stringify())&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#9C3EDA;">const</span><span style="color:#90A4AE;"> obj1 </span><span style="color:#39ADB5;">=</span><span style="color:#39ADB5;"> {</span></span>
<span class="line"><span style="color:#E53935;">  name</span><span style="color:#39ADB5;">:</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">maomao</span><span style="color:#39ADB5;">&#39;</span><span style="color:#39ADB5;">,</span></span>
<span class="line"><span style="color:#E53935;">  props</span><span style="color:#39ADB5;">:</span><span style="color:#39ADB5;"> {</span><span style="color:#E53935;"> a</span><span style="color:#39ADB5;">:</span><span style="color:#F76D47;"> 1</span><span style="color:#39ADB5;"> },</span></span>
<span class="line"><span style="color:#39ADB5;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9C3EDA;">const</span><span style="color:#90A4AE;"> obj2 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> JSON</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">parse</span><span style="color:#90A4AE;">(JSON</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stringify</span><span style="color:#90A4AE;">(obj1))</span></span>
<span class="line"><span style="color:#90A4AE;">obj2</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">name </span><span style="color:#39ADB5;">=</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">zs</span><span style="color:#39ADB5;">&#39;</span></span>
<span class="line"><span style="color:#90A4AE;">obj2</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">props</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">a</span><span style="color:#39ADB5;">++</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;">obj1 </span><span style="color:#90A4AE;font-style:italic;">// { name: &#39;maomao&#39;, props: { a: 1 } }</span></span>
<span class="line"><span style="color:#90A4AE;">obj2 </span><span style="color:#90A4AE;font-style:italic;">// { name: &#39;zs&#39;, props: { a: 2 } }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="lodash-clonedeep" tabindex="-1">lodash.cloneDeep <a class="header-anchor" href="#lodash-clonedeep" aria-label="Permalink to &quot;lodash.cloneDeep&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-lighter vp-code" tabindex="0"><code><span class="line"><span style="color:#39ADB5;font-style:italic;">import</span><span style="color:#39ADB5;"> {</span><span style="color:#90A4AE;"> cloneDeep</span><span style="color:#39ADB5;"> }</span><span style="color:#39ADB5;font-style:italic;"> from</span><span style="color:#39ADB5;"> &#39;</span><span style="color:#91B859;">lodash-es</span><span style="color:#39ADB5;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9C3EDA;">const</span><span style="color:#90A4AE;"> obj2 </span><span style="color:#39ADB5;">=</span><span style="color:#6182B8;"> cloneDeep</span><span style="color:#90A4AE;">(obj1)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,18),e=[o];function r(c,t,y,i,A,b){return n(),a("div",null,e)}const B=s(p,[["render",r]]);export{m as __pageData,B as default};
